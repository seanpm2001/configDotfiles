mkcd(){
  mkdir -p "$1"
  cd "$1"
}
function gdrive_download () {
  CONFIRM=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate "https://drive.google.com/u/0/uc?id=$1&export=download" -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')
  wget --load-cookies /tmp/cookies.txt "https://drive.google.com/u/0/uc?id=$1&export=download&confirm=$CONFIRM" -O $2
  rm -rf /tmp/cookies.txt
}

# call from your terminal
# weather yourcity intervalDay
# weather Jakarta 0 > for current info
# weather Jakarta 1 > for 1 day
# etc
weather(){
curl wttr.in/$1\?$2
}

downloadVideo(){
youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio' --merge-output-format mp4 "$1"
}
alias downloadmp3='youtube-dl -x --audio-format mp3'


# Alias for usefull tools
alias checkmem="sudo ps_mem -S"

# please check my custom config for neofetch
# and make sure if the path is right XD
# if you store the config on ~/config.conf
# change the this path XD
alias neo='neofetch --config ~/.config/neofetch/config.conf --ascii ~/.config/neofetch/ypSig'
alias sysfo='neofetch - --config ~/Programming/linux/configDotfiles/neofetch/configNo.conf  --off'

# alias for php server and lamp
alias php-server-start="sudo systemctl start httpd mysqld && sudo systemctl status httpd mysqld |  grep -i --max-count=4 'httpd.service - Apache Web Server\|active:\|mariadb.service - MariaDB' "
alias php-server-stop="sudo systemctl stop httpd mysqld && sudo systemctl status httpd mysqld |  grep -i --max-count=4 'httpd.service - Apache Web Server\|active:\|mariadb.service - MariaDB' "
alias php-server-status="sudo systemctl status httpd mysqld |  grep -i --max-count=4 'httpd.service - Apache Web Server\|active:\|mariadb.service - MariaDB' "
alias php-server-restart="sudo systemctl restart httpd mysqld && sudo systemctl status httpd mysqld |  grep -i --max-count=4 'httpd.service - Apache Web Server\|active:\|mariadb.service - MariaDB' "

# alias for Postgresql
alias activate-postgresql="sudo systemctl start postgresql | sudo systemctl status postgresql.service | grep -i --max-count=4 'postgresql.service - PostgreSQL database server\| Active:'"
alias deactivate-postgresql="sudo systemctl stop postgresql | sudo systemctl status postgresql.service | grep -i --max-count=4 'postgresql.service - PostgreSQL database server\| Active:'"
alias status-postgresql="sudo systemctl status postgresql.service | grep -i --max-count=4 'postgresql.service - PostgreSQL database server\| Active:'"

# ls aliases
alias ls="exa -l --group-directories-first"
alias la="exa -la --group-directories-first --sort name"

#update grub
alias up-grub="sudo mkinitcpio -P linux && sudo grub-mkconfig -o /boot/grub/grub.cfg"

# cat alias
alias prin="bat "

#alias editor kate for sudoedit
alias sukate="SUDO_EDITOR=kate sudoedit "

# alias updatePkg="~/Programming/linux/configDotfiles/asci_art/colorbars && sudo pacman -Syyu"
# alias updateAur="~/Programming/linux/configDotfiles/asci_art/colorbars && trizen -Syyu"
alias gen-mirror="sudo reflector --verbose --latest 5 --sort rate --protocol https --protocol http --save /etc/pacman.d/mirrorlist; sudo pacman -Syyu"
alias gen-mirror-local="sudo reflector  --verbose --protocol http --protocol https --sort rate -c Singapore -c Thailand -c Indonesia  --latest 50  --save /etc/pacman.d/mirrorlist; sudo pacman -Syyu"
alias bootimer="systemd-analyze | lolcat"
alias memdf="pydf"

checkInstall(){
    if ! sudo pacman -Ss $1 | grep -i 'installed';then
        printf "sorry the package $1 Not installed on your system :("'\n'
          printf "did you want to Install $1 [Y/N] ?"
            if read -q;then
               echo; sudo pacman -S $1
            fi
    fi
}

# alias scalling cpu
alias powerpc="sudo cpupower frequency-set -g performance"
alias lowpc="sudo cpupower frequency-set -g powersave"
setFrequencyCpu(){
    currentFreq=$(cat /proc/cpuinfo | grep 'MHz')
    printf "Your Current CPU Frequency\n$currentFreq\n\n"
    printf "Do you want to scalling your cpu frequency ?"'\n'
    printf "Input frequency as GHz like 1/3.3/etc ";read freq
        if [[ $freq ]]
        then
            echo; sudo cpupower frequency-set -f $freq\GHz && sleep 0.5;
            echo;cat /proc/cpuinfo | grep 'MHz'
        fi

}